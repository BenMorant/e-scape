{"version":3,"sources":["components/Hello.js","App.js","reportWebVitals.js","services/i18n.js","index.js"],"names":["Hello","useTranslation","t","i18n","changeLanguage","lng","type","onClick","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","resources","en","common","fr","commonFr","i18next","init","interpolation","escapeValue","languages","every","lang","undefined","getDataByLanguage","Error","ReactDOM","render","StrictMode","I18nextProvider","document","getElementById"],"mappings":"2VAwBeA,EAtBD,WACV,MAAoBC,YAAe,UAA3BC,EAAR,EAAQA,EAAGC,EAAX,EAAWA,KAELC,EAAiB,SAAAC,GACnBF,EAAKC,eAAeC,IAGxB,OACI,gCACI,wBAAQC,KAAK,SAASC,QAAS,kBAAMH,EAAe,OAApD,gBAGA,wBAAQE,KAAK,SAASC,QAAS,kBAAMH,EAAe,OAApD,gBAIA,8BACI,6BAAKF,EAAE,uBCTRM,MARf,WACI,OACI,qBAAKC,UAAU,MAAf,SACI,cAAC,EAAD,OCOGC,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCHdQ,EAAY,CACdC,GAAI,CACAC,O,OAEJC,GAAI,CACAD,OAAQE,IAIhBC,IACKC,KAAK,CACFC,cAAe,CAAEC,aAAa,GAC9BtB,IAAK,KACLc,cAEHN,MAAK,WACF,GAAIW,IAAQI,UAAUC,OAAM,SAAAC,GAAI,YAAwCC,IAApCP,IAAQQ,kBAAkBF,MAC1D,MAAM,IAAIG,MAAM,kCAIbT,QAAf,ECjBAU,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACC,EAAA,EAAD,CAAiBlC,KAAMA,EAAvB,SACI,cAAC,EAAD,QAGRmC,SAASC,eAAe,SAM5B7B,M","file":"static/js/main.2ccf66cb.chunk.js","sourcesContent":["import { useTranslation } from 'react-i18next';\n\nconst Hello = () => {\n    const { t, i18n } = useTranslation('common');\n\n    const changeLanguage = lng => {\n        i18n.changeLanguage(lng);\n    };\n\n    return (\n        <div>\n            <button type=\"button\" onClick={() => changeLanguage('fr')}>\n                fr\n            </button>\n            <button type=\"button\" onClick={() => changeLanguage('en')}>\n                en\n            </button>\n\n            <div>\n                <h1>{t('hello_world')}</h1>\n            </div>\n        </div>\n    );\n};\nexport default Hello;\n","import Hello from './components/Hello';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Hello />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import i18next from 'i18next';\nimport commonFr from '../translations/fr/common.json';\nimport commonEn from '../translations/en/common.json';\n\nconst resources = {\n    en: {\n        common: commonEn,\n    },\n    fr: {\n        common: commonFr,\n    },\n};\n\ni18next\n    .init({\n        interpolation: { escapeValue: false },\n        lng: 'en',\n        resources,\n    })\n    .then(() => {\n        if (i18next.languages.every(lang => i18next.getDataByLanguage(lang) === undefined)) {\n            throw new Error('Failed to load localization');\n        }\n    });\n\nexport default i18next;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { I18nextProvider } from 'react-i18next';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport i18n from './services/i18n';\n\nReactDOM.render(\n    <React.StrictMode>\n        <I18nextProvider i18n={i18n}>\n            <App />\n        </I18nextProvider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}